name: Build

on:
  push:
    branches:
    - master
    tags:
    - '*'
  pull_request:
    branches:
    - master

defaults:
  run:
    shell: bash

jobs:
  all:
    name: All

    strategy:
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        - windows-latest

    runs-on: ${{matrix.os}}

    env:
      RUSTFLAGS: "--deny warnings"

    steps:
    - uses: actions/checkout@v2

    - name: Download actionlint
      id: actionlint
      run: bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)

    - name: Check Github Actions Workflow
      run: ${{ steps.actionlint.outputs.executable }} -color

    # An issue with BSD Tar causes sporadic failures on macOS.
    # c.f https://github.com/actions/cache/issues/403
    - name: Install GNU Tar
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew install gnu-tar
        echo /usr/local/opt/gnu-tar/libexec/gnubin > "$GITHUB_PATH"

    - name: Install Postgres (macOS)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew install postgresql
        brew services start postgresql

    - name: Install Postgres (Linux)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get install postgresql

    - name: Install Postgres (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        choco install postgresql

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ github.sha }}
        restore-keys: ${{ runner.os }}-

    - name: Install Clippy
      run: |
        rustup component add clippy

    - name: Info
      run: |
        rustup --version
        cargo --version
        cargo clippy --version

    - name: Build
      run: cargo build --workspace --all-features --all-targets

    - name: Test
      run: cargo test --workspace --all-features --all-targets

    - name: Forbid
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get install ripgrep
        ./bin/forbid

    - name: Clippy
      run: ./bin/clippy

    - name: Install Nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        components: rustfmt

    - name: Check Formatting
      run: cargo +nightly fmt --workspace -- --check

    - name: Install
      run: |
        cargo install --path .
        quwue --version
